spring:
  application:
    name: API-GATEWAY
  cloud:
    config:
      enabled: false

    #  main:
    #    web-application-type: none

    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"

  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 3s





info:
  app:
    name: "gatewayserver"
    description: "API gateway server for FinStream Application"
    version: "1.0.0"

logging:
  level:
    com:
      finStream:
        finstreamapigateway: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2

server:
  port: 8072

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"

management:
  endpoint:
    gateway:
      enabled: true
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  info:
    env:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true


  tracing:
    sampling:
      probability: 1.0